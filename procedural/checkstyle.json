{
    "defaultSeverity": "INFO",
    "extendsConfigPath": "",
    "numberOfCheckerThreads": 4,
    "baseDefines": [],
    "defineCombinations": [],
    "checks": [
        {
            "type": "Anonymous",
            "props": {}
        },
        {
            "type": "ArrayAccess",
            "props": {
                "spaceBefore": false,
                "spaceInside": false
            }
        },
        {
            "type": "ArrayLiteral",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "ArrowFunction",
            "props": {
                "allowReturn": true,
                "allowFunction": true,
                "allowCurlyBody": true,
                "allowSingleArgParens": true
            }
        },
        {
            "type": "AvoidIdentifier",
            "props": {
                "avoidIdentifiers": []
            }
        },
        {
            "type": "AvoidStarImport",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "CatchParameterName",
            "props": {
                "format": "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$",
                "severity": "WARNING"
            }
        },
        {
            "type": "ConditionalCompilation",
            "props": {
                "policy": "aligned",
                "allowSingleline": true
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "format": "^[A-Z][A-Z0-9]*(_[A-Z0-9_]+)*$",
                "tokens": [
                    "INLINE"
                ],
                "ignoreExtern": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "DefaultComesLast",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "DocCommentStyle",
            "props": {
                "lineStyle": "none",
                "startStyle": "twostars"
            }
        },
        {
            "type": "Dynamic",
            "props": {}
        },
        {
            "type": "ERegLiteral",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "EmptyBlock",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "OBJECT_DECL",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "option": "empty"
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "max": 1,
                "allowEmptyLineAfterSingleLineComment": true,
                "allowEmptyLineAfterMultiLineComment": true,
                "requireEmptyLineAfterPackage": true,
                "requireEmptyLineAfterClass": false,
                "requireEmptyLineAfterInterface": false,
                "requireEmptyLineAfterAbstract": false
            }
        },
        {
            "type": "EmptyPackage",
            "props": {
                "enforceEmptyPackage": false
            }
        },
        {
            "type": "ExtendedEmptyLines",
            "props": {
                "max": 1,
                "skipSingleLineTypes": true,
                "defaultPolicy": "upto",
                "ignore": [],
                "none": [
                    "beforePackage",
                    "betweenImports",
                    "typeDefinition",
                    "afterLeftCurly",
                    "beforeRightCurly"
                ],
                "exact": [],
                "upto": [],
                "atleast": []
            }
        },
        {
            "type": "Final",
            "props": {}
        },
        {
            "type": "HexadecimalLiteral",
            "props": {
                "option": "lowerCase"
            }
        },
        {
            "type": "IndentationCharacter",
            "props": {
                "character": "    ",
                "ignorePattern": "^$"
            }
        },
        {
            "type": "InnerAssignment",
            "props": {
                "ignoreReturnAssignments": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "Interface",
            "props": {
                "allowMarkerInterfaces": true,
                "allowProperties": true
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "ignoreEmptySingleline": true,
                "option": "eol",
                "ignoreSingleline": false
            }
        },
        {
            "type": "ListenerName",
            "props": {
                "listeners": [
                    "addEventListener",
                    "addListener",
                    "on",
                    "once"
                ],
                "format": "^_?[a-z][a-zA-Z0-9]*$",
                "severity": "WARNING"
            }
        },
        {
            "type": "LocalVariableName",
            "props": {
                "format": "^_?[a-z][a-zA-Z0-9]*$",
                "tokens": [],
                "ignoreExtern": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "MemberName",
            "props": {
                "format": "^_{0,2}[a-z][a-zA-Z0-9]*$",
                "tokens": [
                    "CLASS",
                    "TYPEDEF",
                    "PUBLIC",
                    "PRIVATE"
                ],
                "ignoreExtern": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "MemberName",
            "props": {
                "ignoreExtern": true,
                "format": "^[A-Z][a-zA-Z0-9_]*$",
                "tokens": [
                    "ABSTRACT",
                    "ENUM"
                ],
                "severity": "WARNING"
            }
        },
        {
            "type": "MethodName",
            "props": {
                "format": "^[a-z][a-zA-Z0-9]*$",
                "tokens": [],
                "ignoreExtern": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "ModifierOrder",
            "props": {
                "modifiers": [
                    "MACRO",
                    "OVERRIDE",
                    "PUBLIC_PRIVATE",
                    "STATIC",
                    "INLINE",
                    "DYNAMIC",
                    "FINAL"
                ],
                "severity": "ERROR"
            }
        },
        {
            "type": "MultipleStringLiterals",
            "props": {
                "allowDuplicates": 4,
                "minLength": 2,
                "ignore": "^\\s+$"
            }
        },
        {
            "type": "MultipleVariableDeclarations",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "NeedBraces",
            "props": {
                "tokens": [
                    "FOR",
                    "IF",
                    "ELSE_IF",
                    "WHILE",
                    "DO_WHILE"
                ],
                "allowSingleLineStatement": true
            }
        },
        {
            "type": "NestedForDepth",
            "props": {
                "max": 4
            }
        },
        {
            "type": "NestedIfDepth",
            "props": {
                "max": 4
            }
        },
        {
            "type": "NestedTryDepth",
            "props": {
                "max": 2
            }
        },
        {
            "type": "NullableParameter",
            "props": {
                "option": "questionMark",
                "severity": "WARNING"
            }
        },
        {
            "type": "OperatorWhitespace",
            "props": {
                "arithmeticOpPolicy": "around",
                "arrowFunctionPolicy": "around",
                "arrowPolicy": "around",
                "assignOpPolicy": "around",
                "bitwiseOpPolicy": "around",
                "boolOpPolicy": "around",
                "compareOpPolicy": "around",
                "intervalOpPolicy": "around",
                "newFunctionTypePolicy": "around",
                "oldFunctionTypePolicy": "around",
                "ternaryOpPolicy": "around",
                "unaryOpPolicy": "none"
            }
        },
        {
            "type": "OperatorWrap",
            "props": {
                "tokens": [
                    "=",
                    "+",
                    "-",
                    "*",
                    "/",
                    "%",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "==",
                    "!=",
                    "&",
                    "|",
                    "^",
                    "&&",
                    "||",
                    "<<",
                    ">>",
                    ">>>",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "<<=",
                    ">>=",
                    ">>>=",
                    "|=",
                    "&=",
                    "^=",
                    "...",
                    "=>",
                    "++",
                    "--"
                ],
                "option": "nl"
            }
        },
        {
            "type": "ParameterName",
            "props": {
                "format": "^(_|[a-z][a-zA-Z0-9]*$)",
                "tokens": [],
                "ignoreExtern": true
            }
        },
        {
            "type": "ParameterNumber",
            "props": {
                "max": 7,
                "ignoreOverriddenMethods": false
            }
        },
        {
            "type": "RedundantAccessMeta",
            "props": {
                "prohibitMeta": false
            }
        },
        {
            "type": "RedundantAllowMeta",
            "props": {
                "prohibitMeta": false
            }
        },
        {
            "type": "RedundantModifier",
            "props": {
                "enforcePublicPrivate": false,
                "enforcePublic": false,
                "enforcePrivate": true
            }
        },
        {
            "type": "Return",
            "props": {
                "allowEmptyReturn": true,
                "enforceReturnType": true,
                "enforceReturnTypeForAnonymous": false,
                "severity": "ERROR"
            }
        },
        {
            "type": "ReturnCount",
            "props": {
                "max": 8,
                "ignoreFormat": "^$"
            }
        },
        {
            "type": "SeparatorWhitespace",
            "props": {
                "dotPolicy": "none",
                "commaPolicy": "after",
                "allowTrailingComma": true,
                "semicolonPolicy": "ignore"
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "tokens": [
                    ","
                ],
                "option": "eol"
            }
        },
        {
            "type": "SimplifyBooleanExpression",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "SimplifyBooleanReturn",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "Spacing",
            "props": {
                "spaceAroundBinop": true,
                "noSpaceAroundUnop": false,
                "spaceIfCondition": "should",
                "spaceForLoop": "should",
                "spaceWhileLoop": "should",
                "spaceSwitchCase": "should",
                "spaceCatch": "should",
                "ignoreRangeOperator": false
            }
        },
        {
            "type": "StringLiteral",
            "props": {
                "policy": "doubleAndInterpolation",
                "allowException": true
            }
        },
        {
            "type": "Trace",
            "props": {}
        },
        {
            "type": "TrailingWhitespace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TypeName",
            "props": {
                "format": "^[A-Z]+[a-zA-Z0-9]*$",
                "tokens": [],
                "ignoreExtern": true,
                "severity": "WARNING"
            }
        },
        {
            "type": "UnnecessaryConstructor",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "UnusedLocalVar",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "WhitespaceAfter",
            "props": {
                "tokens": [
                    ",",
                    ";"
                ],
                "allowTrailingComma": true
            }
        },
        {
            "type": "WhitespaceAround",
            "props": {
                "tokens": [
                    "=",
                    "+",
                    "-",
                    "*",
                    "/",
                    "%",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "==",
                    "!=",
                    "&",
                    "|",
                    "^",
                    "&&",
                    "||",
                    "<<",
                    ">>",
                    ">>>",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "<<=",
                    ">>=",
                    ">>>=",
                    "|=",
                    "&=",
                    "^=",
                    "=>"
                ]
            }
        }
    ],
    "exclude": {},
    "version": 1
}
