buildscript {
    ext.ver_crashlytics = '2.9.5' // https://docs.fabric.io/android/changelog.html#crashlytics
    ext.ver_fabric = '1.26.1' // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
    ext.ver_support = '27.1.1' // managed by studio
    ext.ver_takisoftPreferences = '27.1.0.0' // https://github.com/Gericop/Android-Support-Preference-V7-Fix

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "io.fabric.tools:gradle:${ver_fabric}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all'
        options.compilerArgs << '-Xlint:-deprecation'
        options.compilerArgs << '-Xlint:-unchecked'
    }
}

// task clean(type: Delete) {
//     delete rootProject.buildDir
// }

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27

        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        applicationId 'com.eightsines.gdcartoon'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    if (new File('tools/signing.properties').exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file('tools/signing.properties')))

        signingConfigs {
            release {
                storeFile file('tools/signing.keystore')
                keyAlias props['keyAlias']
                storePassword props['storePassword']
                keyPassword props['keyPassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    // implementation "com.android.support:preference-v7:${ver_support}"

    implementation "com.android.support:appcompat-v7:${ver_support}"
    implementation "com.android.support:support-v4:${ver_support}"
    implementation "com.takisoft.fix:preference-v7:${ver_takisoftPreferences}"

    implementation("com.crashlytics.sdk.android:crashlytics:${ver_crashlytics}@aar") {
        transitive = true
    }
}
